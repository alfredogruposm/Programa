//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EquimarFac.TimbradoFelWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_TFDSoap", Namespace="https://www.fel.mx/WS-TFD")]
    public partial class WS_TFD : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TimbrarCFDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelarCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimbrarCFDPruebaOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimbrarCFDTestSectorPrimarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmarRecepcionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerAcuseEnvioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerAcuseCancelacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CambiarPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarComplementoTimbreOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarTimbrePorReferenciaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarEstadoComprobanteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarCreditosOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_TFD() {
            this.Url = global::EquimarFac.Properties.Settings.Default.EquimarFac_TimbradoFelWebService_WS_TFD;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TimbrarCFDCompletedEventHandler TimbrarCFDCompleted;
        
        /// <remarks/>
        public event CancelarCFDICompletedEventHandler CancelarCFDICompleted;
        
        /// <remarks/>
        public event TimbrarCFDPruebaCompletedEventHandler TimbrarCFDPruebaCompleted;
        
        /// <remarks/>
        public event TimbrarCFDTestSectorPrimarioCompletedEventHandler TimbrarCFDTestSectorPrimarioCompleted;
        
        /// <remarks/>
        public event ObtenerPDFCompletedEventHandler ObtenerPDFCompleted;
        
        /// <remarks/>
        public event ConfirmarRecepcionCompletedEventHandler ConfirmarRecepcionCompleted;
        
        /// <remarks/>
        public event ObtenerXMLCompletedEventHandler ObtenerXMLCompleted;
        
        /// <remarks/>
        public event ObtenerAcuseEnvioCompletedEventHandler ObtenerAcuseEnvioCompleted;
        
        /// <remarks/>
        public event ObtenerAcuseCancelacionCompletedEventHandler ObtenerAcuseCancelacionCompleted;
        
        /// <remarks/>
        public event CambiarPasswordCompletedEventHandler CambiarPasswordCompleted;
        
        /// <remarks/>
        public event ConsultarComplementoTimbreCompletedEventHandler ConsultarComplementoTimbreCompleted;
        
        /// <remarks/>
        public event ConsultarTimbrePorReferenciaCompletedEventHandler ConsultarTimbrePorReferenciaCompleted;
        
        /// <remarks/>
        public event ConsultarEstadoComprobanteCompletedEventHandler ConsultarEstadoComprobanteCompleted;
        
        /// <remarks/>
        public event ConsultarCreditosCompletedEventHandler ConsultarCreditosCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/TimbrarCFD", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TimbrarCFD(string usuario, string password, string cadenaXML, string referencia) {
            object[] results = this.Invoke("TimbrarCFD", new object[] {
                        usuario,
                        password,
                        cadenaXML,
                        referencia});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TimbrarCFDAsync(string usuario, string password, string cadenaXML, string referencia) {
            this.TimbrarCFDAsync(usuario, password, cadenaXML, referencia, null);
        }
        
        /// <remarks/>
        public void TimbrarCFDAsync(string usuario, string password, string cadenaXML, string referencia, object userState) {
            if ((this.TimbrarCFDOperationCompleted == null)) {
                this.TimbrarCFDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimbrarCFDOperationCompleted);
            }
            this.InvokeAsync("TimbrarCFD", new object[] {
                        usuario,
                        password,
                        cadenaXML,
                        referencia}, this.TimbrarCFDOperationCompleted, userState);
        }
        
        private void OnTimbrarCFDOperationCompleted(object arg) {
            if ((this.TimbrarCFDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimbrarCFDCompleted(this, new TimbrarCFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/CancelarCFDI", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CancelarCFDI(string usuario, string password, string RFCEmisor, string[] listaCFDI, string certificadoPKCS12_Base64, string passwordPKCS12) {
            object[] results = this.Invoke("CancelarCFDI", new object[] {
                        usuario,
                        password,
                        RFCEmisor,
                        listaCFDI,
                        certificadoPKCS12_Base64,
                        passwordPKCS12});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelarCFDIAsync(string usuario, string password, string RFCEmisor, string[] listaCFDI, string certificadoPKCS12_Base64, string passwordPKCS12) {
            this.CancelarCFDIAsync(usuario, password, RFCEmisor, listaCFDI, certificadoPKCS12_Base64, passwordPKCS12, null);
        }
        
        /// <remarks/>
        public void CancelarCFDIAsync(string usuario, string password, string RFCEmisor, string[] listaCFDI, string certificadoPKCS12_Base64, string passwordPKCS12, object userState) {
            if ((this.CancelarCFDIOperationCompleted == null)) {
                this.CancelarCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelarCFDIOperationCompleted);
            }
            this.InvokeAsync("CancelarCFDI", new object[] {
                        usuario,
                        password,
                        RFCEmisor,
                        listaCFDI,
                        certificadoPKCS12_Base64,
                        passwordPKCS12}, this.CancelarCFDIOperationCompleted, userState);
        }
        
        private void OnCancelarCFDIOperationCompleted(object arg) {
            if ((this.CancelarCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelarCFDICompleted(this, new CancelarCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/TimbrarCFDPrueba", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TimbrarCFDPrueba(string usuario, string password, string cadena) {
            object[] results = this.Invoke("TimbrarCFDPrueba", new object[] {
                        usuario,
                        password,
                        cadena});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TimbrarCFDPruebaAsync(string usuario, string password, string cadena) {
            this.TimbrarCFDPruebaAsync(usuario, password, cadena, null);
        }
        
        /// <remarks/>
        public void TimbrarCFDPruebaAsync(string usuario, string password, string cadena, object userState) {
            if ((this.TimbrarCFDPruebaOperationCompleted == null)) {
                this.TimbrarCFDPruebaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimbrarCFDPruebaOperationCompleted);
            }
            this.InvokeAsync("TimbrarCFDPrueba", new object[] {
                        usuario,
                        password,
                        cadena}, this.TimbrarCFDPruebaOperationCompleted, userState);
        }
        
        private void OnTimbrarCFDPruebaOperationCompleted(object arg) {
            if ((this.TimbrarCFDPruebaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimbrarCFDPruebaCompleted(this, new TimbrarCFDPruebaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/TimbrarCFDTestSectorPrimario", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TimbrarCFDTestSectorPrimario(string usuario, string password, string cadenaXML, string referencia) {
            object[] results = this.Invoke("TimbrarCFDTestSectorPrimario", new object[] {
                        usuario,
                        password,
                        cadenaXML,
                        referencia});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TimbrarCFDTestSectorPrimarioAsync(string usuario, string password, string cadenaXML, string referencia) {
            this.TimbrarCFDTestSectorPrimarioAsync(usuario, password, cadenaXML, referencia, null);
        }
        
        /// <remarks/>
        public void TimbrarCFDTestSectorPrimarioAsync(string usuario, string password, string cadenaXML, string referencia, object userState) {
            if ((this.TimbrarCFDTestSectorPrimarioOperationCompleted == null)) {
                this.TimbrarCFDTestSectorPrimarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimbrarCFDTestSectorPrimarioOperationCompleted);
            }
            this.InvokeAsync("TimbrarCFDTestSectorPrimario", new object[] {
                        usuario,
                        password,
                        cadenaXML,
                        referencia}, this.TimbrarCFDTestSectorPrimarioOperationCompleted, userState);
        }
        
        private void OnTimbrarCFDTestSectorPrimarioOperationCompleted(object arg) {
            if ((this.TimbrarCFDTestSectorPrimarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimbrarCFDTestSectorPrimarioCompleted(this, new TimbrarCFDTestSectorPrimarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ObtenerPDF", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ObtenerPDF(string Usuario, string Password, string rfcEmisor, string UUID, string LogoBase64) {
            object[] results = this.Invoke("ObtenerPDF", new object[] {
                        Usuario,
                        Password,
                        rfcEmisor,
                        UUID,
                        LogoBase64});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerPDFAsync(string Usuario, string Password, string rfcEmisor, string UUID, string LogoBase64) {
            this.ObtenerPDFAsync(Usuario, Password, rfcEmisor, UUID, LogoBase64, null);
        }
        
        /// <remarks/>
        public void ObtenerPDFAsync(string Usuario, string Password, string rfcEmisor, string UUID, string LogoBase64, object userState) {
            if ((this.ObtenerPDFOperationCompleted == null)) {
                this.ObtenerPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerPDFOperationCompleted);
            }
            this.InvokeAsync("ObtenerPDF", new object[] {
                        Usuario,
                        Password,
                        rfcEmisor,
                        UUID,
                        LogoBase64}, this.ObtenerPDFOperationCompleted, userState);
        }
        
        private void OnObtenerPDFOperationCompleted(object arg) {
            if ((this.ObtenerPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerPDFCompleted(this, new ObtenerPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ConfirmarRecepcion", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ConfirmarRecepcion(string Usuario, string Password, string UUID) {
            object[] results = this.Invoke("ConfirmarRecepcion", new object[] {
                        Usuario,
                        Password,
                        UUID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmarRecepcionAsync(string Usuario, string Password, string UUID) {
            this.ConfirmarRecepcionAsync(Usuario, Password, UUID, null);
        }
        
        /// <remarks/>
        public void ConfirmarRecepcionAsync(string Usuario, string Password, string UUID, object userState) {
            if ((this.ConfirmarRecepcionOperationCompleted == null)) {
                this.ConfirmarRecepcionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmarRecepcionOperationCompleted);
            }
            this.InvokeAsync("ConfirmarRecepcion", new object[] {
                        Usuario,
                        Password,
                        UUID}, this.ConfirmarRecepcionOperationCompleted, userState);
        }
        
        private void OnConfirmarRecepcionOperationCompleted(object arg) {
            if ((this.ConfirmarRecepcionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmarRecepcionCompleted(this, new ConfirmarRecepcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ObtenerXML", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ObtenerXML(string Usuario, string Password, string UUID, string RFCEmisor) {
            object[] results = this.Invoke("ObtenerXML", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerXMLAsync(string Usuario, string Password, string UUID, string RFCEmisor) {
            this.ObtenerXMLAsync(Usuario, Password, UUID, RFCEmisor, null);
        }
        
        /// <remarks/>
        public void ObtenerXMLAsync(string Usuario, string Password, string UUID, string RFCEmisor, object userState) {
            if ((this.ObtenerXMLOperationCompleted == null)) {
                this.ObtenerXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerXMLOperationCompleted);
            }
            this.InvokeAsync("ObtenerXML", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor}, this.ObtenerXMLOperationCompleted, userState);
        }
        
        private void OnObtenerXMLOperationCompleted(object arg) {
            if ((this.ObtenerXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerXMLCompleted(this, new ObtenerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ObtenerAcuseEnvio", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ObtenerAcuseEnvio(string Usuario, string Password, string UUID, string RFCEmisor) {
            object[] results = this.Invoke("ObtenerAcuseEnvio", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerAcuseEnvioAsync(string Usuario, string Password, string UUID, string RFCEmisor) {
            this.ObtenerAcuseEnvioAsync(Usuario, Password, UUID, RFCEmisor, null);
        }
        
        /// <remarks/>
        public void ObtenerAcuseEnvioAsync(string Usuario, string Password, string UUID, string RFCEmisor, object userState) {
            if ((this.ObtenerAcuseEnvioOperationCompleted == null)) {
                this.ObtenerAcuseEnvioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerAcuseEnvioOperationCompleted);
            }
            this.InvokeAsync("ObtenerAcuseEnvio", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor}, this.ObtenerAcuseEnvioOperationCompleted, userState);
        }
        
        private void OnObtenerAcuseEnvioOperationCompleted(object arg) {
            if ((this.ObtenerAcuseEnvioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerAcuseEnvioCompleted(this, new ObtenerAcuseEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ObtenerAcuseCancelacion", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ObtenerAcuseCancelacion(string Usuario, string Password, string UUID, string RFCEmisor) {
            object[] results = this.Invoke("ObtenerAcuseCancelacion", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerAcuseCancelacionAsync(string Usuario, string Password, string UUID, string RFCEmisor) {
            this.ObtenerAcuseCancelacionAsync(Usuario, Password, UUID, RFCEmisor, null);
        }
        
        /// <remarks/>
        public void ObtenerAcuseCancelacionAsync(string Usuario, string Password, string UUID, string RFCEmisor, object userState) {
            if ((this.ObtenerAcuseCancelacionOperationCompleted == null)) {
                this.ObtenerAcuseCancelacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerAcuseCancelacionOperationCompleted);
            }
            this.InvokeAsync("ObtenerAcuseCancelacion", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor}, this.ObtenerAcuseCancelacionOperationCompleted, userState);
        }
        
        private void OnObtenerAcuseCancelacionOperationCompleted(object arg) {
            if ((this.ObtenerAcuseCancelacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerAcuseCancelacionCompleted(this, new ObtenerAcuseCancelacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/CambiarPassword", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CambiarPassword(string Usuario, string passwordActual, string passwordNuevo) {
            object[] results = this.Invoke("CambiarPassword", new object[] {
                        Usuario,
                        passwordActual,
                        passwordNuevo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CambiarPasswordAsync(string Usuario, string passwordActual, string passwordNuevo) {
            this.CambiarPasswordAsync(Usuario, passwordActual, passwordNuevo, null);
        }
        
        /// <remarks/>
        public void CambiarPasswordAsync(string Usuario, string passwordActual, string passwordNuevo, object userState) {
            if ((this.CambiarPasswordOperationCompleted == null)) {
                this.CambiarPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCambiarPasswordOperationCompleted);
            }
            this.InvokeAsync("CambiarPassword", new object[] {
                        Usuario,
                        passwordActual,
                        passwordNuevo}, this.CambiarPasswordOperationCompleted, userState);
        }
        
        private void OnCambiarPasswordOperationCompleted(object arg) {
            if ((this.CambiarPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CambiarPasswordCompleted(this, new CambiarPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ConsultarComplementoTimbre", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ConsultarComplementoTimbre(string Usuario, string Password, string UUID) {
            object[] results = this.Invoke("ConsultarComplementoTimbre", new object[] {
                        Usuario,
                        Password,
                        UUID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarComplementoTimbreAsync(string Usuario, string Password, string UUID) {
            this.ConsultarComplementoTimbreAsync(Usuario, Password, UUID, null);
        }
        
        /// <remarks/>
        public void ConsultarComplementoTimbreAsync(string Usuario, string Password, string UUID, object userState) {
            if ((this.ConsultarComplementoTimbreOperationCompleted == null)) {
                this.ConsultarComplementoTimbreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarComplementoTimbreOperationCompleted);
            }
            this.InvokeAsync("ConsultarComplementoTimbre", new object[] {
                        Usuario,
                        Password,
                        UUID}, this.ConsultarComplementoTimbreOperationCompleted, userState);
        }
        
        private void OnConsultarComplementoTimbreOperationCompleted(object arg) {
            if ((this.ConsultarComplementoTimbreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarComplementoTimbreCompleted(this, new ConsultarComplementoTimbreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ConsultarTimbrePorReferencia", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ConsultarTimbrePorReferencia(string Usuario, string Password, string RFCEmisor, string Referencia) {
            object[] results = this.Invoke("ConsultarTimbrePorReferencia", new object[] {
                        Usuario,
                        Password,
                        RFCEmisor,
                        Referencia});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarTimbrePorReferenciaAsync(string Usuario, string Password, string RFCEmisor, string Referencia) {
            this.ConsultarTimbrePorReferenciaAsync(Usuario, Password, RFCEmisor, Referencia, null);
        }
        
        /// <remarks/>
        public void ConsultarTimbrePorReferenciaAsync(string Usuario, string Password, string RFCEmisor, string Referencia, object userState) {
            if ((this.ConsultarTimbrePorReferenciaOperationCompleted == null)) {
                this.ConsultarTimbrePorReferenciaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarTimbrePorReferenciaOperationCompleted);
            }
            this.InvokeAsync("ConsultarTimbrePorReferencia", new object[] {
                        Usuario,
                        Password,
                        RFCEmisor,
                        Referencia}, this.ConsultarTimbrePorReferenciaOperationCompleted, userState);
        }
        
        private void OnConsultarTimbrePorReferenciaOperationCompleted(object arg) {
            if ((this.ConsultarTimbrePorReferenciaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarTimbrePorReferenciaCompleted(this, new ConsultarTimbrePorReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ConsultarEstadoComprobante", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ConsultarEstadoComprobante(string Usuario, string Password, string UUID, string RFCEmisor) {
            object[] results = this.Invoke("ConsultarEstadoComprobante", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarEstadoComprobanteAsync(string Usuario, string Password, string UUID, string RFCEmisor) {
            this.ConsultarEstadoComprobanteAsync(Usuario, Password, UUID, RFCEmisor, null);
        }
        
        /// <remarks/>
        public void ConsultarEstadoComprobanteAsync(string Usuario, string Password, string UUID, string RFCEmisor, object userState) {
            if ((this.ConsultarEstadoComprobanteOperationCompleted == null)) {
                this.ConsultarEstadoComprobanteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarEstadoComprobanteOperationCompleted);
            }
            this.InvokeAsync("ConsultarEstadoComprobante", new object[] {
                        Usuario,
                        Password,
                        UUID,
                        RFCEmisor}, this.ConsultarEstadoComprobanteOperationCompleted, userState);
        }
        
        private void OnConsultarEstadoComprobanteOperationCompleted(object arg) {
            if ((this.ConsultarEstadoComprobanteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarEstadoComprobanteCompleted(this, new ConsultarEstadoComprobanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.fel.mx/WS-TFD/ConsultarCreditos", RequestNamespace="https://www.fel.mx/WS-TFD", ResponseNamespace="https://www.fel.mx/WS-TFD", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ConsultarCreditos(string Usuario, string Password) {
            object[] results = this.Invoke("ConsultarCreditos", new object[] {
                        Usuario,
                        Password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarCreditosAsync(string Usuario, string Password) {
            this.ConsultarCreditosAsync(Usuario, Password, null);
        }
        
        /// <remarks/>
        public void ConsultarCreditosAsync(string Usuario, string Password, object userState) {
            if ((this.ConsultarCreditosOperationCompleted == null)) {
                this.ConsultarCreditosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarCreditosOperationCompleted);
            }
            this.InvokeAsync("ConsultarCreditos", new object[] {
                        Usuario,
                        Password}, this.ConsultarCreditosOperationCompleted, userState);
        }
        
        private void OnConsultarCreditosOperationCompleted(object arg) {
            if ((this.ConsultarCreditosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarCreditosCompleted(this, new ConsultarCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TimbrarCFDCompletedEventHandler(object sender, TimbrarCFDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimbrarCFDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimbrarCFDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CancelarCFDICompletedEventHandler(object sender, CancelarCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelarCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelarCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TimbrarCFDPruebaCompletedEventHandler(object sender, TimbrarCFDPruebaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimbrarCFDPruebaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimbrarCFDPruebaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TimbrarCFDTestSectorPrimarioCompletedEventHandler(object sender, TimbrarCFDTestSectorPrimarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimbrarCFDTestSectorPrimarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimbrarCFDTestSectorPrimarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ObtenerPDFCompletedEventHandler(object sender, ObtenerPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConfirmarRecepcionCompletedEventHandler(object sender, ConfirmarRecepcionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmarRecepcionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmarRecepcionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ObtenerXMLCompletedEventHandler(object sender, ObtenerXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ObtenerAcuseEnvioCompletedEventHandler(object sender, ObtenerAcuseEnvioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerAcuseEnvioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerAcuseEnvioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ObtenerAcuseCancelacionCompletedEventHandler(object sender, ObtenerAcuseCancelacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerAcuseCancelacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerAcuseCancelacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CambiarPasswordCompletedEventHandler(object sender, CambiarPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CambiarPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CambiarPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConsultarComplementoTimbreCompletedEventHandler(object sender, ConsultarComplementoTimbreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarComplementoTimbreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarComplementoTimbreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConsultarTimbrePorReferenciaCompletedEventHandler(object sender, ConsultarTimbrePorReferenciaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarTimbrePorReferenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarTimbrePorReferenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConsultarEstadoComprobanteCompletedEventHandler(object sender, ConsultarEstadoComprobanteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarEstadoComprobanteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarEstadoComprobanteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ConsultarCreditosCompletedEventHandler(object sender, ConsultarCreditosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarCreditosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarCreditosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591